
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.channels.Channels;
import java.nio.channels.ReadableByteChannel;
import java.util.Calendar;
import java.util.HashMap;

public class security {
	private String securitySymbol;
	private double volatility;
	private HashMap<Calendar, prices> historicalPrices;

	public security(String securitySymbol) {
		this.securitySymbol = securitySymbol;
		this.historicalPrices = new HashMap<Calendar, prices>();
		loadData();
		calcVolatility();
	}

	public String getSymbol() {
		return this.securitySymbol;
	}

	public double getVolatility() {
		return this.volatility;
	}

	public void calcVolatility() {
		this.volatility = 0.00;
	}

	public double getClosePriceForDate(Calendar date) {
		return this.historicalPrices.get(date).getClose();
	}

	public double getOpenPriceForDate(Calendar date) {
		return this.historicalPrices.get(date).getOpen();
	}

	protected void loadData() throws IOException {
		String retStr = ("http://ichart.finance.yahoo.com/table.csv?s=" + this.securitySymbol
				+ "&d=10&e=6&f=2016&g=d&a=5&b=10&c=2015&ignore=.csv");

		URL url = null;
		try {
			url = new URL(retStr);
			ReadableByteChannel rbc = Channels.newChannel(url.openStream());
			FileOutputStream fos = new FileOutputStream(this.securitySymbol + ".csv");
			// FileDescriptor FD = fos.getFD();
			// FileInputStream fis = new FileInputStream(FD);
			fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
			fos.flush();
			fos.close();

		} catch (MalformedURLException e) {
			System.out.println("No such URL, please check stock symbols");
		}
	}
}
